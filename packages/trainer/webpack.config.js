/* eslint-disable @typescript-eslint/no-var-requires */
const path = require('path');

// webpack.config.js
const CircularDependencyPlugin = require('circular-dependency-plugin');

var HtmlWebpackPlugin = require('html-webpack-plugin');
var HTMLWebpackPluginConfig = new HtmlWebpackPlugin({
  template: __dirname + '/src/index.html',
  filename: 'index.html',
  inject: 'body',
});

module.exports = {
  entry: './src/index',
  devtool: 'inline-source-map',
  plugins: [
    HTMLWebpackPluginConfig,
    new CircularDependencyPlugin({
      // exclude detection of files based on a RegExp
      exclude: /a\.js|node_modules/,
      // add errors to webpack instead of warnings
      failOnError: true,
      // allow import cycles that include an asyncronous import,
      // e.g. via import(/* webpackMode: "weak" */ './file.js')
      allowAsyncCycles: false,
      // set the current working directory for displaying module paths
      cwd: process.cwd(),
      // `onStart` is called before the cycle detection starts
      onStart({ compilation }) {
        console.log('start detecting webpack modules cycles');
      },
      // `onDetected` is called for each module that is cyclical
      onDetected({ module: webpackModuleRecord, paths, compilation }) {
        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        compilation.errors.push(new Error(paths.join(' -> ')));
      },
      // `onEnd` is called before the cycle detection ends
      onEnd({ compilation }) {
        console.log('end detecting webpack modules cycles');
      },
      // // exclude detection of files based on a RegExp
      // exclude: /a\.js|node_modules/,
      // // include specific files based on a RegExp
      // include: /packages/,
      // // add errors to webpack instead of warnings
      // failOnError: true,
      // // allow import cycles that include an asyncronous import,
      // // e.g. via import(/* webpackMode: "weak" */ './file.js')
      // allowAsyncCycles: false,
      // // set the current working directory for displaying module paths
      // cwd: process.cwd(),
    }),
  ],
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        use: 'ts-loader',
        exclude: /node_modules/,
      },
      {
        test: /\.(png|ttf|jpe?g|gif)$/i,
        use: [
          {
            loader: 'file-loader',
          },
        ],
      },
      {
        test: /\.svg$/,
        use: ['@svgr/webpack', 'url-loader'],
      },
    ],
  },
  resolve: {
    alias: {
      '@ui': path.resolve(__dirname, '../ui/src/'),
      '@core-components': path.resolve(__dirname, '../ui/src/core-components/'),
      '@assets': path.resolve(__dirname, 'src/public/'),
      '@redux': path.resolve(__dirname, 'src/redux/'),
      '@api': path.resolve(__dirname, 'src/api/'),
    },
    extensions: ['.tsx', '.ts', '.js'],
  },
  devServer: {
    publicPath: '/',
    contentBase: './src',
    historyApiFallback: true,
    hot: true,
  },
  output: {
    filename: 'bundle.js',
    path: path.resolve(__dirname, 'dist'),
  },
};
